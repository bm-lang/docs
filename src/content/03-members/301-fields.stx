@ref:field
= Fields

Fields are variables or constants that have a value stored in the memory.
All fields have a type which cannot be changed after the declaration and can be either explicitly declared or inferred through the initialization.

Fields can be only owned by following members and the lifespan will depend on the owner:

- [Modules]: The field will be always living on runtime.
- [Classes]: The field will live as long as the class instance lives.
- [Function Parameters]: The field will live during the execution of the function.
- [Instruction Blocks]: The field will live during the execution of the block.

+++ code:bm
module math {
  let PI = 3.1415;
}

class Point {
  var x = 0;
  var y = 0;
}

function swap(list List<Any>, index1 Int, index2 Int) {
  let aux = list[index1];
  list[index1] = list[index2];
  list[index2] = aux;
}
+++
